#!/usr/bin/env bash

new_ext='.webm'

# Colours
[[ -t 1 ]] && {
    c_d=$'\e[1;30m' # GREY
    c_r=$'\e[1;31m' # RED
    c_g=$'\e[1;32m' # GREEN
    c_y=$'\e[1;33m' # YELLOW
    c_b=$'\e[1;34m' # BLUE
    c_m=$'\e[1;35m' # VIOLET
    c_t=$'\e[1;36m' # TEAL
    c_w=$'\e[1;37m' # WHITE
    c_c=$'\e[0m'    # DISABLES COLOUR
}

function help {
    script_name="${0//*\/}"
    printf '\n%s\n\n'      "${c_w}Convert mp4 videos to webm with ffmpeg$c_c"
    printf '%s\n'          "${c_b}SYNOPSIS$c_c"
    printf '  %s\n'        "$c_y$script_name $c_d[${c_r}QUALITY$c_d] $c_d[${c_r}FILES$c_d]$c_c"
    printf '  %s\n\n'      "$c_y$script_name $c_w-h$c_d|$c_w--help$c_c"
    printf '%s\n'          "${c_b}EXAMPLES$c_c"
    printf '  %-56s%s\n'   "$c_y$script_name ${c_w}8M$c_c" 'Convert all files in current directory with 8M bitrate'
    printf '  %-56s%s\n' "$c_y$script_name ${c_w}4M 4M f1.mp4 f2.mp4 f3.mp4$c_c" 'Convert certain files with 4M bitrate'
    printf '  %-56s%s\n\n' "$c_y$script_name ${c_w}4M 3M file_*.mp4 more_*.mp4$c_c" 'Convert certain files with 3M bitrate'
}

function error {
    printf '%s %s\n' "${c_r}ERROR:$c_c" "$c_w$1$c_c" >&2
}

function convert_mp4 {
    # Figure out number of cores
    if [[ "$(uname)" = 'Darwin' ]]; then
        num_cores="$(sysctl -n hw.ncpu)"
    elif [[ "$(uname)" =~ Linux ]]; then
        while read -r; do
            [[ "$REPLY" =~ ^processor[^:]*:[^0-9]*([0-9][0-9]*) ]] && {
                num_cores="${BASH_REMATCH[1]}"
                num_cores=$(( num_cores + 1 ))
            }
        done < /proc/cpuinfo
    else
        num_cores=1
    fi
    printf '%s %s\n\n' "$c_b==>" "$c_w$num_cores cores detected$c_c"

    # Check and see if the folder "converting" exists. If it doesn't then we want to create it.
    [[ -d 'converting' ]] \
        || install -d converting

    # Move video into converting and change directories
    mv "$1" converting/
    pushd converting >/dev/null

    # Figure out old extension
    old_ext="${1/*\.}"

    # Convert video
    ffmpeg -i "$1" -c:v libvpx -crf 4 -q:v 10 -b:v "$bitrate" -c:a libvorbis -threads $num_cores "${1/\.${old_ext}}${new_ext}"

    # Check to see if the folder "converted" exists. If it doesn't then we want to create it.
    [[ -d '../converted' ]] \
        || install -d ../converted

    # Check and see if the folder "created" exists. If it doesn't then we want to create it.
    [[ -d '../created' ]] \
        || install -d ../created

    # Move old mp4 files into "converted" folder
    mv "$1" ../converted/

    # Move new webm files into "created" folder
    mv "${1/\.${old_ext}}${new_ext}" ../created/

    # Get out of the converting directory
    popd converting >/dev/null
}

type -P ffmpeg >/dev/null || {
    error 'The ffmpeg executable was not found in $PATH'
    exit 1
}

[[ -n "$1" ]] || {
    error 'The desired bitrate of the resulting video must be passed as the first argument'
    exit 1
}

[[ "$1" = '-h' || "$1" = '--help' ]] && {
    help
    exit 0
}

bitrate="$1"
shift

if [[ -n "$1" ]]; then
    for video in "$@"; do
        if [[ -f "$video" ]]; then
            convert_mp4 "$video"
        else
            error "No video file(s) matching '$video'"
        fi
    done
else
    for video in *.mp4; do
        convert_mp4 "$video"
    done
fi

